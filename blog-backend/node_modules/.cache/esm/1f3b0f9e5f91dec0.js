let mongoose;_5f9‍.x([["default",()=>_5f9‍.o]]);_5f9‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);

const { Schema } = mongoose;

const Comment = new Schema({
    createdAt: { type: Date, default: Date.now },
    username: String, 
    text: String
});
const PostSchema = new Schema({
    title: String,
    body: String,
    tags: [String],
    likesCount: { 
        type: Number,
        default: 0 ,
    },
    likes: { 
        type: [String],
        default: [],
    },
    // liked: { 
    //     type: Boolean,
    //     default: false,
    // },
    comments: { 
        type: [Comment],
        default: [],
    },
    hidden: Boolean,
    publishedDate : {
        type: Date,
        default: Date.now,
    },
    user: {
        _id: mongoose.Types.ObjectId,
        username: String,
    },
});

PostSchema.statics.like = function({_id, username}) {
    return this.findByIdAndUpdate(_id, {
        $inc: { likesCount: + 1 }, // likesCount 를 1 더하고
        $push: { likes: username }
    }, {
        new: true, // 이걸 해야 업데이트 된 데이터를 반환함
        select: 'likesCount'
    }).exec();
};

PostSchema.statics.unlike = function({_id, username}) {
    return this.findByIdAndUpdate(_id, {
        $inc: { likesCount: -1 },
        $pull: { likes: username }
    }, {
        new: true,
        select: 'likesCount'
    });
};

// PostSchema.statics.list = function({cursor, username, self}) {
//     // cursor, username 값의 존재 유무에 따라 쿼리가 유동적으로 설정됩니다.
//     const query = Object.assign(
//         { }, 
//         cursor ? { _id: { $lt: cursor } } : { },
//         username ? { username } : { }
//     );

//     // API 를 호출한 username (self) 값이 존재하면 likes 에 해당 username 이 있는지 체크
//     const projection = self ? {
//         title: 1,
//         body: 1,
//         tags:1,
//         comments: 1,
//         likes: {
//             '$elemMatch': { '$eq': self }
//         },
//         likesCount: 1,
//     } : { };

//     return this.find(query, projection)
//         .sort({_id: -1}) // _id 역순
//         .exec();
// };

const Post = mongoose.model('Post',PostSchema);
_5f9‍.d(Post);

