var Vow = require('vow');

function Externals() {
    this._sources = {};
    this.registerSource(require('./sources/git-source'));
    this.registerSource(require('./sources/zip-source'));
};

Externals.prototype = {

    registerSource : function(source) {
        this._sources[source.getType()] = source;
    },

    fetch : function(options) {
        if (!options.url) return Vow.reject(new Error('Cannot fetch source. \'url\' is not defined'));

        var sources = this._sources,
            sourceClass;

        if (options.type) {
            sourceClass = sources[options.type];
        } else {
            Object.keys(sources).forEach(function(key) {
                if (sources[key].matchesUrl(options.url))
                    sourceClass = sources[key];
            });
        }

        if (!sourceClass) return Vow.reject(new Error('Cannot match source for type \'' + options.type + '\' and url \'' + options.url + '\''));

        var source = new sourceClass(options);

        return source.fetch();
    }

}

module.exports = Externals;
